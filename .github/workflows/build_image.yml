name: Docker Image Build and Push to GHCR (Manual)

on:
  # Remplacement du 'push' par 'workflow_dispatch' pour permettre une exécution manuelle
  workflow_dispatch:
    # Vous pouvez ajouter des entrées (inputs) pour le workflow si nécessaire, par exemple pour spécifier un tag
    inputs:
      tag_name:
        description: 'Tag de l''image Docker (laissez vide pour utiliser le SHA par défaut ou latest)'
        required: false
        default: 'manual-build' # Un tag par défaut pour les constructions manuelles
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Nécessaire pour écrire (push) sur GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Récupère le code source, y compris le Dockerfile

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # Nom d'utilisateur GitHub
          password: ${{ secrets.GITHUB_TOKEN }} # Token d'accès (Généré automatiquement par GitHub)

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/sfdx-hardis
          tags: |
            # Ajout du tag 'latest' sur la branche par défaut
            type=raw,value=latest,enable={{is_default_branch}}
            # Ajout du tag fourni manuellement (s'il existe)
            type=raw,value=${{ github.event.inputs.tag_name }}
            # Tag basé sur le SHA de commit
            type=sha
            # Tag basé sur la branche
            type=ref,event=branch
            # type=semver,pattern={{version}} # Désactivé si vous ne gérez pas de tags SemVer

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
